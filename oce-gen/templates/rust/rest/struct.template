// 
// Generated by oce-gen
// DO NOT EDIT
// 
use crate::schema;

use reqwest::Method;

use std::borrow::Cow;

pub struct {{ name }}<'a> {
    {%- for field in fields -%}

    {%- let kind -%}
    {%- match field.typ -%} 

    {%- when StructValueType::Usize -%}
        {%- let kind = "usize" -%}

    {%- when StructValueType::Str -%}
        {%- let kind = "&'a str" -%}

    {%- endmatch -%}

    {%- if field.is_optional %}
    pub r#{{ field.name }}: Option<{{ kind }}>,
    {%- else %}
    pub r#{{ field.name }}: {{ kind }},
    {% endif -%}

    {% endfor -%}
}

{#
impl<'a> crate::rest::Request for {{ name }}<'a> {
    {%- match method -%}
    {%- when MethodType::Get -%}
    const METHOD: Method = Method::GET;
    {%- when MethodType::Post -%}
    const METHOD: Method = Method::POST;
    {%- endmatch -%}

    const PATH: &'static str = {{ path }}
    type Response = schema::{{ response }}
    fn path(&self) -> Cow<'_, str> {
        Cow::Owned()
    }
}
#}
